search()
help.start()
help('vector')
?vector
apropos('vector')
#installed.packages()
2+2
3-2
8*8
18/2
pi
pi*2
3^3
sqrt(5)
abs(-8)
factorial(5)
log(2,base=10)
log10(2)
log2(6)
exp(2)
cos(30)
sin(45)
tan(45)
data1 = c(1,2,3,4,5)
data1
data2=c(data1,7,8,9)
data2
data3 = scan()
data3
day2 = scan(what = 'character')
day2
getwd()
dir()
list.files()
ls()
rm(day2)
df = read.csv('test_scores.csv')
head(df)
library(dplyr)
quantile(df$posttest)
fivenum(df$posttest)
data2=df
data2.mat=as.matrix(data2)
data2.mat=as.matrix(data2)
data2.mat
frame.list=as.list(data2)
frame.list
frame.list=as.list(data2)
frame.list
sd(data2$posttest)
length(na.omit(data2$posttest))
t(data2)
length(na.omit(data2$posttest))
margin.table(data2$posttest)
prop.table(data2$posttest)
stem(data2$posttest)
sample(data2,size=10,replace=TRUE)
table(data2$posttest)
plot(data2$pretest)
boxplot(data2$pretest)
data2.stack=stack(frame.list)
data2.stack
unstack(data2.stack)
fac=factor(data2$posttest)
fac
str(df)
head(df)
sapply(df,class)
colnames(df)
rownames(df)
summary(df)
class(df)
min(df$posttest)
mode(df$posttest)
median(df$posttest)
mean(df$posttest)
sum(df$posttest)
sort(df$posttest)
order(df$posttest)
rank(df$posttest)
dimnames(df)
length(df$posttest)
df$student_id
df$posttest
df$posttest[3]
df$school[3]
df$posttest[1:5]
data.frame(df)
View(df)
names(df)
row.names(df)
col(df)
colnames(df)
length(df)
str(df)
ls(df)
ls.str(df)
ls.str(pattern = 'df')
dim(df)
dimnames(df)
head(df)
head(df,n=3)
head(df$student_id)
head(df$pretest)
head(df$posttest)
head(df$gender)
head(str(df))
head(structure(df))
head(structure(df$n_student))
head(structure(df$posttest))
fivenum(df$pretest)
tail(df)
tail(df, n=3)
tail(df$student_id)
tail(df$posttest)
tail(str(df))
tail(structure(df))
tail(structure(df$pretest))
class(df)
class(df$student_id)
class(df$posttest)
class(dim(df))
class(dimnames(df))
summary(df)
summary(df$student_id)
summary(df$posttest)
summary(df$gender)
mean(df$posttest)
median(df$posttest)
mode(df$posttest)
mad(df$posttest)
sd(df$posttest)
var(df$posttest)
quantile(df$posttest)
quantile(df$n_student)
var.test(df$pretest, df$posttest)
var.test(df$posttest, df$pretest)
tdf= attach(df)
tdf
max(df$pretest)
min(df$pretest)
head(stack(df))
head(sort(df$pretest))
head(sort(df$posttest))
tail(sort(df$pretest))
tail(order(df$posttest))
head(rank(df$posttest))
tail(rank(df$posttest))
df[3,3]
df[1,3:5]
df[c(1,455,1000),]
df[c(511,652,121), "school"]
df[c(65,515,114), 1:5 ]
head(as.matrix(df))
tail(as.matrix(df))
head(as.matrix(df$gender))
as.matrix(df)
as.matrix(df$gender)
as.matrix.data.frame(df)
rbind(df)
head(rbind(df))
head(rbind(df$student_id))
head(rbind(df$posttest))
tail(rbind(df))
cbind(df)
head(cbind(df))
tail(cbind(df))
head.matrix(df)
tail.matrix(df)
cumsum(df$pretest)
head(cumsum(df$pretest))
tail(cumsum(df$pretest))
cummax(df$pretest)
head(cummax(df$pretest))
tail(cummax(df$pretest))
cummin(df$pretest)
head(cummin(df$pretest))
tail(cummin(df$pretest))
cumprod(df$posttest)
head(cumprod(df$posttest))
head(cumprod(df$posttest), n=10)
tail(cumprod(df$posttest), n=10)
table(df$student_id)
table(df$school)
head(table(df$lunch))
head(table(df$pretest))
tail(table(df$pretest))
head(table(df$pretest), n=10)
as.table(df$posttest)
head(as.table(df$posttest))
tail(as.table(df$posttest))
is.table(df)
is.data.frame(df)
is.character(df)
if(class(df) == 'data.frame') TRUE else FALSE
stem(df$posttest)
stem(df$posttest, scale=4)
with(df, stem(df$posttest[df$school == 'ANKYI']))
seq_along(df)
head(rnorm(df$pretest, mean = 0, sd = 1))
head(rnorm(df$posttest, mean = 0, sd = 1))
head(rnorm(df$n_student, mean = 0, sd = 1))
head(pnorm(df$pretest, mean = 0, sd = 1))
head(pnorm(df$posttest, mean = 0, sd = 1))
head(qnorm(df$pretest, mean = 0, sd = 1))
head(qnorm(df$posttest, mean = 0, sd = 1))
head(dnorm(df$pretest, mean = 0, sd = 1))
head(dnorm(df$posttest, mean = 0, sd = 1))
t.test(df$pretest, df$posttest)
t.test(df$pretest, df$posttest, var.equal = TRUE)
t.test(df$posttest, mu = 5)
t.test(df$posttest, mu = 5, alternative = 'greater')
t.test(df$posttest ~ df$school, data = df, subset = df$school %in% c('ANKYI' , 'CCAAW'))
wilcox.test(df$pretest, df$posttest)
cor(df$pretest, df$posttest)
cov(df$pretest, df$posttest)
v = as.matrix(cov(df$pretest, df$posttest))
cov2cor(v)
cor.test(df$pretest, df$posttest)
chisq.test(df$posttest)
density(df$posttest)
library(dplyr)
temp = df %>% filter(df$school == "ANKYI")
temp.aov = na.omit(aov(temp$pretest ~ temp$posttest, data = temp))
temp.aov
summary(temp.aov)
toway = aov(posttest ~ pretest * n_student, data = temp)
toway
factor(df$school_setting)
testCol = c(rep(df$posttest - df$pretest, length(df)))
head(testCol)
testRow = c('STN', 'Urban', "Non-public", 454, 'Standard', 20, '4RVCS045', 'Female', 'NA', 00, 00)
testRow
test = data.frame(df, testCol)
head(test)
test = df
test['testRow',] = testRow
tail(test)
test = df
test["Test",] = NA
tail(test)
col(temp, as.factor = F)
x = df[ , 10:11]
head(x)
colMeans(x)
rowMeans(x)
colSums(x)
rowSums(x)
apply(df[ , 10:11], 2, mean)
apply(df[ , 10:11], 1, mean)
apply(df[ , 10:11], 2, median)
apply(df[ , 10:11], 2, var)
tapply(df$posttest, df$school, FUN = mean)
tapply(df$posttest, df$school, FUN = var)
tapply(df$posttest, df$school_setting, FUN = mean)
tapply(df$posttest, df$school_type, FUN = mean)
tapply(df$posttest, df$teaching_method, FUN = mean)
tapply(df$posttest, df$gender, FUN = mean)
tapply(df$posttest, df$lunch, FUN = mean)
aggregate(df[ , 10:11], by = list(df$school), FUN = mean)
aggregate(df[ , 10:11], by = list(df$school_setting), FUN = mean)
aggregate(df[ , 10:11], by = list(df$school_type), FUN = mean)
aggregate(df[ , 10:11], by = list(df$teaching_method), FUN = mean)
aggregate(df[ , 10:11], by = list(df$gender), FUN = mean)
aggregate(cbind(df$pretest, df$posttest), data = df, by = list(df$lunch), FUN = mean)
aggregate(df$posttest ~ df$school, data = df, FUN = mean)
aggregate(df$posttest ~ df$school * df$school_type, data = df, FUN = mean)
head(na.omit(df))
objects(df)
ls(df)
dflm = lm(posttest ~ school, data = df)
dflm
cor.test(~ df$pretest + df$posttest, data = df)
coef(dflm)
confint(dflm)
head(fitted(dflm))
head(residuals(dflm))
formula(dflm)
dflm$call
formula(df)
df.m = apply(df[,10:11], 2, mean)
df.m
df.sd = apply(df[ , 10:11], 2, sd)
df.sd
df.s = apply(df[,10:11], 2, sum)
df.s
df.1 = df.s/df.m
df.1
df.se = df.sd / sqrt(df.1)
df.se
df.m + df.se
max(df.m + df.se)
df.max = round(max(df.m + df.se) + 0.5, 0)
df.max
cummeadian = function(x) {
tmp = seq_along(x)
for(i in 1:length(tmp)) tmp[i] = median(x[1:i])
print(x)}
cummeadian(temp$posttest)
log2 = function(x) log(x, base = 2)
log2
log2(temp$posttest)
manning = function(radius, gradient, coef=0.1125) (radius^(2/3)*gradient^0.5/coef)
manning(radius = 1, gradient = 1/500)
nlevels(df)
df %>% filter(df$school == 'ANKYI') %>% summary()
summary(filter(df, school == 'ANKYI'))
tt = df %>% filter(df$gender == 'Female') %>% select(school, n_student, teaching_method, pretest, posttest)
head(tt)
summary(tt)
tt = df %>% filter(df$gender == 'Male') %>% select(school, n_student, teaching_method, pretest, posttest)
head(tt)
summary(tt)
tt = df %>% group_by(df$school) %>% summary()
tt
savehistory("C:/Users/inritagi/Desktop/SEM2/4.EDA/Final/la1/RHistoryAllCommands.Rhistory")
